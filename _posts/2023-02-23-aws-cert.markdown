---
layout: post
title:  "Getting AWS Certified (as an Azure person)"
date:   2023-02-022 15:20:57 -0500
categories: learning
---

For the last 7+ years of my career, I've been all-in on the Microsoft stack.  My previous employer was fully Microsoft stack and ran out of a traditional datacenter for much of my time there (MSSQLServer, ASP.NET/C#, Windows Servers, IIS).  When the time came to migrate to the cloud, our approach was to go in on the Azure cloud by default, and choose alternative technologies/solutions where appropriate. 

Most of my hands-on experience in the Azure cloud is with these technologies: 

- Azure SQL
- Azure CosmosDB
- Azure Application Services
- Azure Functions
- Azure VM
- Azure Firewall
- Azure App Configuration
- Azure Key Vault
- Azure Pipelines
- Azure Application Insights

plus some non-Microsoft stuff like:

- Kafka
- Terraform
- Dynatrace
- Hashicorp Vault


I'm sure there's things I'm forgetting too. 

Needless to say, all of my experience to date has been in *Azure*, or via a managed service hosted on Azure (minus an edge case where a managed service was only available on AWS, but that's a different story).

In moving to AWS, I found that I understood many of the concepts I needed, but struggled with terminology.  At worst, there were pieces of jargon and TLAs throw around that I would have trouble following along with. At best, I could listen to someone talking about pieces and translate it in my head.  Somewhere in the middle there would be a concept I took for granted as being true/false in Azure that wasn't the case in AWS, but this was pretty rare. 

I found that I was always applying a translation layer when working with others, by taking what they had explained to me but thinking about it in Azure terms. 

<insert nice translation layer diagram here>

Eventually, I was going to need to learn how to think in AWS terms.  To accomplish this, I pushed myself to complete the AWS Certified Cloud Practicioner certification.  I figured that simply studying the material once wouldn't work for establishing that "AWS-native" thinking ability, and that completing the exam was the perfect way to push myself to study the material deeply enough to 

## Why CCP vs SAA?

There's mixed advice on whether to take the CCP exam vs the SAA.  My rationale was as follows:

1. I am in a management role right now.  I need to understand the possibilities of the cloud, not necessarily how to implement them
2. I don't use the cloud technologies enough day-to-day to be able to go in-depth with the services
3. In-depth, hands-on experience with the services doesn't match my immediate need of "removing the translation layer" 
4. I can always do it later, after I've had more time to play with it on my own first

For the time being, I do not regret this choice.  For someone who is net-new to the cloud or moving from one cloud provider to another, I think CCP is an excellent choice to build your foundational knowledge or reinforce the mappings you need to make in the transition. 

If you are actively working in a technical area and see yourself leaning towards one of the specific technical tracks (Developer, Operations, or Architect), I'd suggest going with one of those paths and default to Architect unless you have a specific desire to learn the Developer or Operations routes. 


## Any tips for the exam?

Yes, which is mostly why I chose to write this blog post! 

### You will never get 100%

My mentality has always been to target 90-100% on any type of academic test I do.  The AWS CCP covers an enormous range of services, technologies, concepts, etc.  Despite how much you study and learn, there will be simple nuances you miss.  You probably aren't going to get 100% because there's far more information you'll need to learn than you have capacity to store (and willingness to learn).

The AWS CCP covers a [large list of topics]() spanning a [huge range of services](), and questions are derived from the [FAQs](). 

On top of that, it's difficult to write multiple choice questions in a way that are both clearly understandable without being blatantly obvious.

There's just far too much material to be covered, but if you can cover *all of the topics* at a minimum you should be in a good place. 

If you are reading this and somehow managed to get 100%, hats off to you!!

### Your on-the-job experience isn't enough -- invest in training materials

I'm convinced that even if you've been using the AWS cloud for years, you'll still need to study practice materials.  Your job role likely focuses your scope on specific areas relevant to what you/your organization use.  There was a *lot* of material on EC2 pricing for example, something that isn't as relevant to someone in my situation whose org uses containerized applications. 

### The training materials aren't enough -- invest in practice exams

Even the training materials aren't enough.  AWS Skillbuilder has a Cloud Essentials Learning Path that, after completion, helped me score about a 70% (bare passing grade) on my first practice exam.

### Read the question carefully

Multiple choice questions are deceptively tricky.  They'll use negatives where you don't expect them, IE "Which of these is not a benefit of using PaaS over IaaS". 

### READ THE QUESTION CAREFULLY!!

I mean it!  Seriously, *read the question carefully*

### Identify key words in the question that apply to the answers

I.E "Which of these does not reflect operational excellence pillar of AWS Well-Architected Framework".  You can expect all of the answers to be "correct" in the sense that they are all part of the AWS Well-Architected Framework, but not wholly correct.  They might give you an option of "match capacity with demand", which might fit better under

### Test taking is a skill unto itself.  Refresh yourself on it

It's been a long time since I've been in school. 

### Proceed with confidence 

The middle of the test is not the time to doubt yourself. 


## What did you learn in the process?

First and foremost, a glance at a [comparison list](https://learn.microsoft.com/en-us/azure/architecture/aws-professional/services) should tip you off to the fact that Azure's naming conventions are (mostly) more intuitive.  Coming from Azure first, I'll always prefer those more intuitive names. 

Secondly, at the scope level 

Thirdly, the CCP exam is broad and will cover a lot of technologies you'll never use and topics you'll never care about.  It's not a bad idea to have a broad base of knowledge, even if you'll lose it later in favour of deeper knowledge in specific areas. 